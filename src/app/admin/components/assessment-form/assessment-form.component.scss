.google-place-input {
  width: 50%;
  min-width: 280px;
  height: 2rem;
  font-size: 1.5rem;
  padding: 0.5rem;
}
.invalid {
  border: 1px solid #ff0000 !important;
  box-shadow: 0 0 5px #999;
}

#notfound {
  position: relative;
  height: 100vh;
  background: #f6f6f6;
}

#notfound .notfound {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.notfound {
  max-width: 767px;
  width: 100%;
  line-height: 1.4;
  padding: 110px 40px;
  text-align: center;
  background: #fff;
  -webkit-box-shadow: 0 15px 15px -10px rgba(0, 0, 0, 0.1);
  box-shadow: 0 15px 15px -10px rgba(0, 0, 0, 0.1);
}

.notfound .notfound-404 {
  position: relative;
  height: 180px;
}

.notfound .notfound-404 h1 {
  font-family: "Roboto", sans-serif;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  font-size: 165px;
  font-weight: 700;
  margin: 0px;
  color: #262626;
  text-transform: uppercase;
}

.notfound .notfound-404 h1 > span {
  color: #00b7ff;
}

.notfound h2 {
  font-family: "Roboto", sans-serif;
  font-size: 22px;
  font-weight: 400;
  text-transform: uppercase;
  color: #151515;
  margin-top: 0px;
  margin-bottom: 25px;
}

.notfound .notfound-search {
  position: relative;
  max-width: 320px;
  width: 100%;
  margin: auto;
}

.notfound .notfound-search > input {
  font-family: "Roboto", sans-serif;
  width: 100%;
  height: 50px;
  padding: 3px 65px 3px 30px;
  color: #151515;
  font-size: 16px;
  background: transparent;
  border: 2px solid #c5c5c5;
  border-radius: 40px;
  -webkit-transition: 0.2s all;
  transition: 0.2s all;
}

.notfound .notfound-search > input:focus {
  border-color: #00b7ff;
}

.notfound .notfound-search > button {
  position: absolute;
  right: 15px;
  top: 5px;
  width: 40px;
  height: 40px;
  text-align: center;
  border: none;
  background: transparent;
  padding: 0;
  cursor: pointer;
}

.notfound .notfound-search > button > span {
  width: 15px;
  height: 15px;
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%) rotate(-45deg);
  -ms-transform: translate(-50%, -50%) rotate(-45deg);
  transform: translate(-50%, -50%) rotate(-45deg);
  margin-left: -3px;
}

.notfound .notfound-search > button > span:after {
  position: absolute;
  content: "";
  width: 10px;
  height: 10px;
  left: 0px;
  top: 0px;
  border-radius: 50%;
  border: 4px solid #c5c5c5;
  -webkit-transition: 0.2s all;
  transition: 0.2s all;
}

.notfound-search > button > span:before {
  position: absolute;
  content: "";
  width: 4px;
  height: 10px;
  left: 7px;
  top: 17px;
  border-radius: 2px;
  background: #c5c5c5;
  -webkit-transition: 0.2s all;
  transition: 0.2s all;
}

.notfound .notfound-search > button:hover > span:after {
  border-color: #00b7ff;
}

.notfound .notfound-search > button:hover > span:before {
  background-color: #00b7ff;
}

@media only screen and (max-width: 767px) {
  .notfound h2 {
    font-size: 18px;
  }
}

@media only screen and (max-width: 480px) {
  .notfound .notfound-404 h1 {
    font-size: 141px;
  }
}
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.radio-item {
  display: inline-block;
  position: relative;
  padding: 0 6px;
  margin: 10px 0 0;
}

input[type="radio"],
input[type="checkbox"] {
  height: 15px;
  width: 15px;
  vertical-align: middle;
  margin: 0 0.4em 0.4em 0;
  border: 1px solid #ccc;
  display: inline-block;
  -webkit-appearance: none;
  -webkit-transition: box-shadow 200ms;
}

/* border radius for radio*/
input[type="radio"] {
  -webkit-border-radius: 100%;
  border-radius: 100%;
  display: inline-block;
}

/* border radius for checkbox */
input[type="checkbox"] {
  -webkit-border-radius: 2px;
  border-radius: 2px;
}

/* hover state */
input[type="radio"]:not(:disabled):hover,
input[type="checkbox"]:not(:disabled):hover {
  border-color: #007dc6;
}

/* active state */
input[type="radio"]:active:not(:disabled),
input[type="checkbox"]:active:not(:disabled) {
  border-color: #007dc6;
}

/* focus state */
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: none;
}

/* input checked border color */
input[type="radio"]:checked,
input[type="checkbox"]:checked {
  border-color: #007dc6;
  background-color: #007dc6;
}

/* radio checked */
input[type="radio"]:checked:before {
  display: block;
  height: 0.6em;
  width: 0.6em;
  position: relative;
  left: 0.2em;
  top: 0.2em;
  background: #fff;
  border-radius: 100%;
  content: "";
}

/* checkbox checked */
input[type="checkbox"]:checked:before {
  content: "";
  display: block;
  width: 4px;
  height: 8px;
  border: solid #fff;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  transform: rotate(45deg);
  margin-left: 4px;
  margin-top: 1px;
}

/* disabled input */
input:disabled {
  opacity: 0.6;
  box-shadow: none;
  background: rgba(0, 0, 0, 0.1);
  box-shadow: none;
}

/* style label for disabled input */
input:disabled + label {
  opacity: 0.6;
  cursor: default;
  -webkit-user-select: none;
}
a.disabled {
  opacity: 0.6;
  cursor: default;
  -webkit-user-select: none;
}

/*Show red border if kept the input empty after touching*/
.ng-touched.ng-invalid-required {
  border: 1px solid red;
  border-left: 1px solid red;
}

/* Show red border when stuff has been typed in, but its invalid */
.form-control.ng-dirty.ng-invalid {
  border: 1px solid red;
  border-left: 1px solid red;
}

.custom-file input:required > .custom-file-label {
  border: 1px solid red;
  border-left: 1px solid red;
}

.ng-submitted input.ng-invalid {
  border: 1px solid red;
  border-left: 1px solid red;
}

.ng-submitted select.ng-invalid {
  border: 1px solid red;
  border-left: 1px solid red;
}

.ng-submitted textarea.ng-invalid {
  border: 1px solid red;
  border-left: 1px solid red;
}

textarea.ng-valid.ng-dirty {
  border: 1px solid green;
  border-left: 1px solid green;
}

select.ng-valid.ng-dirty {
  border: 1px solid green;
  border-left: 1px solid green;
}

input.ng-valid.ng-dirty {
  border: 1px solid green;
  border-left: 1px solid green;
}

.custom-file-label > required {
  color: red;
}

.orange-txt {
  color: red;
}

.white-txt {
  color: white;
}

.personal-form-head .h5 {
  color: #002e5b;
  font-weight: 700;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  padding: 8px 15px;
  margin: 0;
}

.form-group {
  margin-bottom: 1rem;
}

.custom-file-input {
  position: relative;
  z-index: 2;
  width: 100% !important;
  height: calc(2.25rem + 2px);
  margin: 0;
  opacity: 0;
}

.custom-file {
  /* display: -webkit-box; */
  display: -ms-flexbox;
  /* display: flex; */
  /* -webkit-box-align: center; */
  -ms-flex-align: center;
  /* align-items: center; */
}

.custom-file-label {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;
  height: calc(2.25rem + 2px);
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
  color: #495057;
  background-color: #fff;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
}

.custom-file-label::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 3;
  display: block;
  height: calc(calc(2.25rem + 2px) - 1px * 2);
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
  color: #495057;
  content: "Browse";
  background-color: #e9ecef;
  border-left: 1px solid #ced4da;
  border-radius: 0 0.25rem 0.25rem 0;
}

.comment-wrapper .panel-body {
  max-height: 650px;
}

.comment-wrapper .media-list .media img {
  width: 64px;
  height: 64px;
  border: 2px solid #e5e7e8;
  border-radius: 50%;
}

.comment-wrapper .media-list .media {
  border-bottom: 1px dashed #efefef;
  margin-bottom: 25px;
}

ul {
  display: block;
  list-style-type: disc;
  margin-block-start: 0 !important;
  margin-block-end: 0 !important;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  padding-inline-start: 0px !important;
}

.float {
  position: fixed;
  width: 60px;
  height: 60px;
  bottom: 40px;
  right: 40px;
  color: #fff;
  border-radius: 50px;
  text-align: center;
  box-shadow: 2px 2px 3px #999;
  z-index: 9999999;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }

  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none;
  }
}

.fade {
  // first we make all instances of this transparent.
  opacity: 0;
  animation: fadeInUp 0.3s ease-in-out 0s forwards;
  animation-delay: 0s;
}
.modal-header {
  padding: 0 !important;
}

.modal.modal-left .modal-dialog, .modal.modal-right .modal-dialog {
  position: fixed;
  margin: auto;
  width: 1000px;
  max-width: 40% !important;
  height: 100%;
  -webkit-transition: ease all 0.3s;
  transition: ease all 0.3s;
}